@model CustomerLocationViewModel
@using (Ajax.BeginForm("UpdateCustomerLocation", "Customer", new AjaxOptions { InsertionMode = InsertionMode.Replace, OnSuccess = "customerLocationSuccess", UpdateTargetId = "form-customer" }, new { @id = "form-customer" }))
{
    @Html.ValidationSummary()
    
    <input id="LocationId" name="LocationId" type="hidden" value="@Model.LocationId">
    <input id="CustomerId" name="CustomerId" type="hidden" value="@Model.CustomerId">
    
    <fieldset class="dataentry">
     @if (Model.LocationId != 0)
     {
        <div class="customerLocationId">
            @Html.LabelFor(m => m.LocationId)
            @Html.DisplayFor(m => m.LocationId)
        </div>
     }
        <div>
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.Name)
        </div>
        <div>
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.Email)
        </div>
        <div>
            @Html.LabelFor(m => m.ShortName)
            @Html.TextBoxFor(m => m.ShortName, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.ShortName)
        </div>
        <div>
            @Html.LabelFor(m => m.Phone)
            @Html.TextBoxFor(m => m.Phone, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.Phone)
        </div>
        <div>
            @Html.LabelFor(m => m.Fax)
            @Html.TextBoxFor(m => m.Fax)
            @Html.ValidationMessageFor(x => x.Fax)
        </div>
        <div>
            @Html.LabelFor(m => m.Address1)
            @Html.TextBoxFor(m => m.Address1, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.Address1)
        </div>
        <div>
            @Html.LabelFor(m => m.Address2)
            @Html.TextBoxFor(m => m.Address2)
            @Html.ValidationMessageFor(x => x.Address2)
        </div>
        <div>
            @Html.LabelFor(m => m.City)
            @Html.TextBoxFor(m => m.City, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.City)
        </div>
        <div>
            @Html.LabelFor(m => m.StateCode)
            @Html.TextBoxFor(m => m.StateCode, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.StateCode)
        </div>
        <div>
            @Html.LabelFor(m => m.ZipCode)
            @Html.TextBoxFor(m => m.ZipCode, new { data_need_required = "true" })
            @Html.ValidationMessageFor(x => x.ZipCode)
        </div>
    </fieldset>

    <div class="oms-button">
        @if (Model.LocationId != 0)
        {
            <input type="submit" name="submit" class="k-button" value="@CustomerLocationAction.Update" />
            <input type="submit" name="submit" class="k-button" value="@CustomerLocationAction.Remove" />
        }
        else
        {
            <input type="submit" name="submit" class="k-button" value="@CustomerLocationAction.Add" />
        }
        <input type="button" name="cancel" value="Cancel" class="k-button cancel" onclick="closeLocationWindow();" />
    </div>
}
